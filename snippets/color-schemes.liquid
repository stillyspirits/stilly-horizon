{% style %}
  {% for scheme in settings.color_schemes -%}
    {% assign scheme_classes = scheme_classes | append: ', .color-' | append: scheme.id %}
    {% if forloop.index == 1 %}
      :root,
    {% endif %}
    {% assign background_brightness = scheme.settings.background | color_brightness %}
    {% if background_brightness < 64 %}
      {% assign opacity_5_15 = 0.15 %}
      {% assign opacity_10_25 = 0.25 %}
      {% assign opacity_35_55 = 0.55 %}
      {% assign opacity_40_60 = 0.60 %}
      {% assign opacity_30_60 = 0.60 %}
    {% else %}
      {% assign opacity_5_15 = 0.05 %}
      {% assign opacity_10_25 = 0.1 %}
      {% assign opacity_35_55 = 0.35 %}
      {% assign opacity_40_60 = 0.40 %}
      {% assign opacity_30_60 = 0.30 %}
    {% endif %}
    .color-{{ scheme.id }} {
        --color-background: rgb({{ scheme.settings.background.rgba }});
        /* RGB values only to apply different opacities - Relative color values are not supported in iOS < 16.4 */
        --color-background-rgb: {{ scheme.settings.background.rgb }};
        --opacity-5-15: {{ opacity_5_15 }};
        --opacity-10-25: {{ opacity_10_25 }};
        --opacity-35-55: {{ opacity_35_55 }};
        --opacity-40-60: {{ opacity_40_60 }};
        --opacity-30-60: {{ opacity_30_60 }};
        --color-foreground: rgb({{ scheme.settings.foreground.rgba }});
        --color-foreground-rgb: {{ scheme.settings.foreground.rgb }};
        --color-foreground-heading: rgb({{ scheme.settings.foreground_heading.rgba }});
        --color-foreground-heading-rgb: {{ scheme.settings.foreground_heading.rgb }};
        --color-primary: rgb({{ scheme.settings.primary.rgba }});
        --color-primary-rgb: {{ scheme.settings.primary.rgb }};
        --color-primary-hover: rgb({{ scheme.settings.primary_hover.rgba }});
        --color-primary-hover-rgb: {{ scheme.settings.primary_hover.rgb }};
        --color-border: rgb({{ scheme.settings.border.rgba }});
        --color-border-rgb: {{ scheme.settings.border.rgb }};
        --color-shadow: rgb({{ scheme.settings.shadow.rgba }});
        --color-shadow-rgb: {{ scheme.settings.shadow.rgb }};
        --color-primary-button-text: rgb({{ scheme.settings.primary_button_text.rgba }});
        --color-primary-button-background: rgb({{ scheme.settings.primary_button_background.rgba }});
        --color-primary-button-border: rgb({{ scheme.settings.primary_button_border.rgba }});
        --color-primary-button-hover-text: rgb({{ scheme.settings.primary_button_hover_text.rgba }});
        --color-primary-button-hover-background: rgb({{ scheme.settings.primary_button_hover_background.rgba }});
        --color-primary-button-hover-border: rgb({{ scheme.settings.primary_button_hover_border.rgba }});
        --color-secondary-button-text: rgb({{ scheme.settings.secondary_button_text.rgba }});
        --color-secondary-button-background: rgb({{ scheme.settings.secondary_button_background.rgba }});
        --color-secondary-button-border: rgb({{ scheme.settings.secondary_button_border.rgba }});
        --color-secondary-button-hover-text: rgb({{ scheme.settings.secondary_button_hover_text.rgba }});
        --color-secondary-button-hover-background: rgb({{ scheme.settings.secondary_button_hover_background.rgba }});
        --color-secondary-button-hover-border: rgb({{ scheme.settings.secondary_button_hover_border.rgba }});
        --color-input-background: rgb({{ scheme.settings.input_background.rgba }});
        --color-input-text: rgb({{ scheme.settings.input_text_color.rgba }});
        --color-input-text-rgb: {{ scheme.settings.input_text_color.rgb }};
        --color-input-border: rgb({{ scheme.settings.input_border_color.rgba }});
        --color-input-hover-background: rgb({{ scheme.settings.input_hover_background.rgba }});
        --color-variant-background: rgb({{ scheme.settings.variant_background_color.rgba }});
        --color-variant-border: rgb({{ scheme.settings.variant_border_color.rgba }});
        --color-variant-text: rgb({{ scheme.settings.variant_text_color.rgba }});
        --color-variant-text-rgb: {{ scheme.settings.variant_text_color.rgb }};
        --color-variant-hover-background: rgb({{ scheme.settings.variant_hover_background_color.rgba }});
        --color-variant-hover-text: rgb({{ scheme.settings.variant_hover_text_color.rgba }});
        --color-variant-hover-border: rgb({{ scheme.settings.variant_hover_border_color.rgba }});
        --color-selected-variant-background: rgb({{ scheme.settings.selected_variant_background_color.rgba }});
        --color-selected-variant-border: rgb({{ scheme.settings.selected_variant_border_color.rgba }});
        --color-selected-variant-text: rgb({{ scheme.settings.selected_variant_text_color.rgba }});
        --color-selected-variant-hover-background: rgb({{ scheme.settings.selected_variant_hover_background_color.rgba }});
        --color-selected-variant-hover-text: rgb({{ scheme.settings.selected_variant_hover_text_color.rgba }});
        --color-selected-variant-hover-border: rgb({{ scheme.settings.selected_variant_hover_border_color.rgba }});

        --input-disabled-background-color: rgb(var(--color-foreground-rgb) / var(--opacity-10));
        --input-disabled-border-color: rgb(var(--color-foreground-rgb) / var(--opacity-5-15));
        --input-disabled-text-color: rgb(var(--color-foreground-rgb) / var(--opacity-50));
        --color-foreground-muted: rgb(var(--color-foreground-rgb) / var(--opacity-60));
        --font-h1--color: var(--color-foreground-heading);
        --font-h2--color: var(--color-foreground-heading);
        --font-h3--color: var(--color-foreground-heading);
        --font-h4--color: var(--color-foreground-heading);
        --font-h5--color: var(--color-foreground-heading);
        --font-h6--color: var(--color-foreground-heading);

        {% comment %} Gradient custom properties {% endcomment %}
        {% if scheme.settings.gradient_background and scheme.settings.gradient_background != blank %}
          --gradient-background: {{ scheme.settings.gradient_background }};
        {% endif %}
        
        {% if scheme.settings.gradient_text and scheme.settings.gradient_text != blank %}
          --gradient-text: {{ scheme.settings.gradient_text }};
        {% elsif scheme.settings.gradient_background and scheme.settings.gradient_background != blank %}
          --gradient-text: {{ scheme.settings.gradient_background }};
        {% endif %}

        /* Shadows */
        {% if settings.drawer_drop_shadow %}
          --shadow-drawer: 0px 4px 20px rgb(var(--color-shadow-rgb) / var(--opacity-15));
        {% endif %}
        {% if settings.popover_drop_shadow %}
          --shadow-blur: 20px;
          --shadow-popover: 0px 4px 20px rgb(var(--color-shadow-rgb) / var(--opacity-15));
        {% endif %}
      }

      {% assign animation_speed = settings.gradient_animation_speed | default: 15 %}
      {% assign animation_enabled = settings.gradient_animation_enabled %}
      
      {% if scheme.settings.gradient_background and scheme.settings.gradient_background != blank %}
        {% comment %} Gradient background styles - auto-apply to sections {% endcomment %}
        
        /* Apply gradient background to sections with this color scheme */
        .section.color-{{ scheme.id }} {
          background: var(--gradient-background);
          {% if animation_enabled %}
            background-size: 400% 400%;
            animation: gradient-shift {{ animation_speed }}s ease infinite;
          {% endif %}
        }
        
        /* For hero sections specifically, only apply when no media */
        .hero.color-{{ scheme.id }}:has(.hero__media-wrapper) {
          background: none;
        }
        
        .color-{{ scheme.id }}.gradient-background,
        .color-{{ scheme.id }} .gradient-background {
          background: var(--gradient-background);
          {% if animation_enabled %}
            background-size: 400% 400%;
            animation: gradient-shift {{ animation_speed }}s ease infinite;
          {% endif %}
        }
      {% endif %}

      {% comment %} Gradient text styles - works independently of background {% endcomment %}
      {% if scheme.settings.gradient_text and scheme.settings.gradient_text != blank %}
        {% comment %} Auto-apply to all headings when text gradient is set {% endcomment %}
        .color-{{ scheme.id }} h1,
        .color-{{ scheme.id }} h2,
        .color-{{ scheme.id }} h3,
        .color-{{ scheme.id }} h4,
        .color-{{ scheme.id }} h5,
        .color-{{ scheme.id }} h6,
        .color-{{ scheme.id }} .h1,
        .color-{{ scheme.id }} .h2,
        .color-{{ scheme.id }} .h3,
        .color-{{ scheme.id }} .h4,
        .color-{{ scheme.id }} .h5,
        .color-{{ scheme.id }} .h6,
        .color-{{ scheme.id }} jumbo-text {
          background: var(--gradient-text);
          -webkit-background-clip: text;
          background-clip: text;
          -webkit-text-fill-color: transparent;
          color: transparent;
          {% if animation_enabled %}
            background-size: 400% 400%;
            animation: gradient-shift {{ animation_speed }}s ease infinite;
          {% endif %}
        }
        
        {% comment %} Also apply to elements with explicit gradient-text class {% endcomment %}
        .color-{{ scheme.id }} .gradient-text {
          background: var(--gradient-text);
          -webkit-background-clip: text;
          background-clip: text;
          -webkit-text-fill-color: transparent;
          color: transparent;
          {% if animation_enabled %}
            background-size: 400% 400%;
            animation: gradient-shift {{ animation_speed }}s ease infinite;
          {% endif %}
        }
      {% elsif scheme.settings.gradient_background and scheme.settings.gradient_background != blank %}
        {% comment %} Fallback: Use background gradient for text if only background gradient is set {% endcomment %}
        .color-{{ scheme.id }} .gradient-text {
          background: var(--gradient-background);
          -webkit-background-clip: text;
          background-clip: text;
          -webkit-text-fill-color: transparent;
          color: transparent;
          {% if animation_enabled %}
            background-size: 400% 400%;
            animation: gradient-shift {{ animation_speed }}s ease infinite;
          {% endif %}
        }
      {% endif %}
  {% endfor %}

  {{ scheme_classes | prepend: 'body' }} {
    color: var(--color-foreground);
    background-color: var(--color-background);
  }
{% endstyle %}
